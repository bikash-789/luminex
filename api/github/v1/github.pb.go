// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: github/v1/github.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RepositoryRequest contains the repository information
type RepositoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Owner         string                 `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Repo          string                 `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepositoryRequest) Reset() {
	*x = RepositoryRequest{}
	mi := &file_github_v1_github_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepositoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryRequest) ProtoMessage() {}

func (x *RepositoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_v1_github_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryRequest.ProtoReflect.Descriptor instead.
func (*RepositoryRequest) Descriptor() ([]byte, []int) {
	return file_github_v1_github_proto_rawDescGZIP(), []int{0}
}

func (x *RepositoryRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *RepositoryRequest) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

// HealthResponse contains the health status
type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_github_v1_github_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_v1_github_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_github_v1_github_proto_rawDescGZIP(), []int{1}
}

func (x *HealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// PRMetricsResponse contains PR metrics
type PRMetricsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AvgMergeTime  string                 `protobuf:"bytes,1,opt,name=avg_merge_time,json=avgMergeTime,proto3" json:"avg_merge_time,omitempty"`
	OpenPrs       int32                  `protobuf:"varint,2,opt,name=open_prs,json=openPrs,proto3" json:"open_prs,omitempty"`
	MergedLast_7  int32                  `protobuf:"varint,3,opt,name=merged_last_7,json=mergedLast7,proto3" json:"merged_last_7,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PRMetricsResponse) Reset() {
	*x = PRMetricsResponse{}
	mi := &file_github_v1_github_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PRMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PRMetricsResponse) ProtoMessage() {}

func (x *PRMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_v1_github_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PRMetricsResponse.ProtoReflect.Descriptor instead.
func (*PRMetricsResponse) Descriptor() ([]byte, []int) {
	return file_github_v1_github_proto_rawDescGZIP(), []int{2}
}

func (x *PRMetricsResponse) GetAvgMergeTime() string {
	if x != nil {
		return x.AvgMergeTime
	}
	return ""
}

func (x *PRMetricsResponse) GetOpenPrs() int32 {
	if x != nil {
		return x.OpenPrs
	}
	return 0
}

func (x *PRMetricsResponse) GetMergedLast_7() int32 {
	if x != nil {
		return x.MergedLast_7
	}
	return 0
}

// MonthData represents metrics for a specific month
type MonthData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Month         string                 `protobuf:"bytes,1,opt,name=month,proto3" json:"month,omitempty"`
	OpenPrs       int32                  `protobuf:"varint,2,opt,name=open_prs,json=openPrs,proto3" json:"open_prs,omitempty"`
	MergedPrs     int32                  `protobuf:"varint,3,opt,name=merged_prs,json=mergedPrs,proto3" json:"merged_prs,omitempty"`
	Issues        int32                  `protobuf:"varint,4,opt,name=issues,proto3" json:"issues,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonthData) Reset() {
	*x = MonthData{}
	mi := &file_github_v1_github_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonthData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthData) ProtoMessage() {}

func (x *MonthData) ProtoReflect() protoreflect.Message {
	mi := &file_github_v1_github_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthData.ProtoReflect.Descriptor instead.
func (*MonthData) Descriptor() ([]byte, []int) {
	return file_github_v1_github_proto_rawDescGZIP(), []int{3}
}

func (x *MonthData) GetMonth() string {
	if x != nil {
		return x.Month
	}
	return ""
}

func (x *MonthData) GetOpenPrs() int32 {
	if x != nil {
		return x.OpenPrs
	}
	return 0
}

func (x *MonthData) GetMergedPrs() int32 {
	if x != nil {
		return x.MergedPrs
	}
	return 0
}

func (x *MonthData) GetIssues() int32 {
	if x != nil {
		return x.Issues
	}
	return 0
}

// MonthlyStatsResponse contains monthly metrics
type MonthlyStatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*MonthData           `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonthlyStatsResponse) Reset() {
	*x = MonthlyStatsResponse{}
	mi := &file_github_v1_github_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonthlyStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthlyStatsResponse) ProtoMessage() {}

func (x *MonthlyStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_v1_github_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthlyStatsResponse.ProtoReflect.Descriptor instead.
func (*MonthlyStatsResponse) Descriptor() ([]byte, []int) {
	return file_github_v1_github_proto_rawDescGZIP(), []int{4}
}

func (x *MonthlyStatsResponse) GetData() []*MonthData {
	if x != nil {
		return x.Data
	}
	return nil
}

// RepoStatsResponse contains repository statistics
type RepoStatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stars         int32                  `protobuf:"varint,1,opt,name=stars,proto3" json:"stars,omitempty"`
	Forks         int32                  `protobuf:"varint,2,opt,name=forks,proto3" json:"forks,omitempty"`
	Watchers      int32                  `protobuf:"varint,3,opt,name=watchers,proto3" json:"watchers,omitempty"`
	SizeKb        int32                  `protobuf:"varint,4,opt,name=size_kb,json=sizeKb,proto3" json:"size_kb,omitempty"`
	LastUpdated   string                 `protobuf:"bytes,5,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	Language      string                 `protobuf:"bytes,6,opt,name=language,proto3" json:"language,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepoStatsResponse) Reset() {
	*x = RepoStatsResponse{}
	mi := &file_github_v1_github_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepoStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoStatsResponse) ProtoMessage() {}

func (x *RepoStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_v1_github_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoStatsResponse.ProtoReflect.Descriptor instead.
func (*RepoStatsResponse) Descriptor() ([]byte, []int) {
	return file_github_v1_github_proto_rawDescGZIP(), []int{5}
}

func (x *RepoStatsResponse) GetStars() int32 {
	if x != nil {
		return x.Stars
	}
	return 0
}

func (x *RepoStatsResponse) GetForks() int32 {
	if x != nil {
		return x.Forks
	}
	return 0
}

func (x *RepoStatsResponse) GetWatchers() int32 {
	if x != nil {
		return x.Watchers
	}
	return 0
}

func (x *RepoStatsResponse) GetSizeKb() int32 {
	if x != nil {
		return x.SizeKb
	}
	return 0
}

func (x *RepoStatsResponse) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

func (x *RepoStatsResponse) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

// ContributorData represents a contributor's information
type ContributorData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Contributions int32                  `protobuf:"varint,2,opt,name=contributions,proto3" json:"contributions,omitempty"`
	AvatarUrl     string                 `protobuf:"bytes,3,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContributorData) Reset() {
	*x = ContributorData{}
	mi := &file_github_v1_github_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContributorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContributorData) ProtoMessage() {}

func (x *ContributorData) ProtoReflect() protoreflect.Message {
	mi := &file_github_v1_github_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContributorData.ProtoReflect.Descriptor instead.
func (*ContributorData) Descriptor() ([]byte, []int) {
	return file_github_v1_github_proto_rawDescGZIP(), []int{6}
}

func (x *ContributorData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ContributorData) GetContributions() int32 {
	if x != nil {
		return x.Contributions
	}
	return 0
}

func (x *ContributorData) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

// ContributorStatsResponse contains contributor statistics
type ContributorStatsResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	TotalContributors  int32                  `protobuf:"varint,1,opt,name=total_contributors,json=totalContributors,proto3" json:"total_contributors,omitempty"`
	TopContributors    []*ContributorData     `protobuf:"bytes,2,rep,name=top_contributors,json=topContributors,proto3" json:"top_contributors,omitempty"`
	CommitsLast_30Days int32                  `protobuf:"varint,3,opt,name=commits_last_30_days,json=commitsLast30Days,proto3" json:"commits_last_30_days,omitempty"`
	AvgCommitsPerDay   float32                `protobuf:"fixed32,4,opt,name=avg_commits_per_day,json=avgCommitsPerDay,proto3" json:"avg_commits_per_day,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ContributorStatsResponse) Reset() {
	*x = ContributorStatsResponse{}
	mi := &file_github_v1_github_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContributorStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContributorStatsResponse) ProtoMessage() {}

func (x *ContributorStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_v1_github_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContributorStatsResponse.ProtoReflect.Descriptor instead.
func (*ContributorStatsResponse) Descriptor() ([]byte, []int) {
	return file_github_v1_github_proto_rawDescGZIP(), []int{7}
}

func (x *ContributorStatsResponse) GetTotalContributors() int32 {
	if x != nil {
		return x.TotalContributors
	}
	return 0
}

func (x *ContributorStatsResponse) GetTopContributors() []*ContributorData {
	if x != nil {
		return x.TopContributors
	}
	return nil
}

func (x *ContributorStatsResponse) GetCommitsLast_30Days() int32 {
	if x != nil {
		return x.CommitsLast_30Days
	}
	return 0
}

func (x *ContributorStatsResponse) GetAvgCommitsPerDay() float32 {
	if x != nil {
		return x.AvgCommitsPerDay
	}
	return 0
}

// IssueStatsResponse contains issue statistics
type IssueStatsResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	OpenIssues        int32                  `protobuf:"varint,1,opt,name=open_issues,json=openIssues,proto3" json:"open_issues,omitempty"`
	ClosedIssues      int32                  `protobuf:"varint,2,opt,name=closed_issues,json=closedIssues,proto3" json:"closed_issues,omitempty"`
	AvgResolutionTime string                 `protobuf:"bytes,3,opt,name=avg_resolution_time,json=avgResolutionTime,proto3" json:"avg_resolution_time,omitempty"`
	OldestOpenIssue   string                 `protobuf:"bytes,4,opt,name=oldest_open_issue,json=oldestOpenIssue,proto3" json:"oldest_open_issue,omitempty"`
	IssuesLast_30Days int32                  `protobuf:"varint,5,opt,name=issues_last_30_days,json=issuesLast30Days,proto3" json:"issues_last_30_days,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *IssueStatsResponse) Reset() {
	*x = IssueStatsResponse{}
	mi := &file_github_v1_github_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssueStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueStatsResponse) ProtoMessage() {}

func (x *IssueStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_v1_github_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueStatsResponse.ProtoReflect.Descriptor instead.
func (*IssueStatsResponse) Descriptor() ([]byte, []int) {
	return file_github_v1_github_proto_rawDescGZIP(), []int{8}
}

func (x *IssueStatsResponse) GetOpenIssues() int32 {
	if x != nil {
		return x.OpenIssues
	}
	return 0
}

func (x *IssueStatsResponse) GetClosedIssues() int32 {
	if x != nil {
		return x.ClosedIssues
	}
	return 0
}

func (x *IssueStatsResponse) GetAvgResolutionTime() string {
	if x != nil {
		return x.AvgResolutionTime
	}
	return ""
}

func (x *IssueStatsResponse) GetOldestOpenIssue() string {
	if x != nil {
		return x.OldestOpenIssue
	}
	return ""
}

func (x *IssueStatsResponse) GetIssuesLast_30Days() int32 {
	if x != nil {
		return x.IssuesLast_30Days
	}
	return 0
}

// DetailedPRStatsResponse contains detailed PR statistics
type DetailedPRStatsResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	AvgMergeTime     string                 `protobuf:"bytes,1,opt,name=avg_merge_time,json=avgMergeTime,proto3" json:"avg_merge_time,omitempty"`
	OpenPrs          int32                  `protobuf:"varint,2,opt,name=open_prs,json=openPrs,proto3" json:"open_prs,omitempty"`
	MergedLast_7     int32                  `protobuf:"varint,3,opt,name=merged_last_7,json=mergedLast7,proto3" json:"merged_last_7,omitempty"`
	SmallPrs         int32                  `protobuf:"varint,4,opt,name=small_prs,json=smallPrs,proto3" json:"small_prs,omitempty"`
	MediumPrs        int32                  `protobuf:"varint,5,opt,name=medium_prs,json=mediumPrs,proto3" json:"medium_prs,omitempty"`
	LargePrs         int32                  `protobuf:"varint,6,opt,name=large_prs,json=largePrs,proto3" json:"large_prs,omitempty"`
	AvgComments      int32                  `protobuf:"varint,7,opt,name=avg_comments,json=avgComments,proto3" json:"avg_comments,omitempty"`
	PrsWithoutReview int32                  `protobuf:"varint,8,opt,name=prs_without_review,json=prsWithoutReview,proto3" json:"prs_without_review,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DetailedPRStatsResponse) Reset() {
	*x = DetailedPRStatsResponse{}
	mi := &file_github_v1_github_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetailedPRStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailedPRStatsResponse) ProtoMessage() {}

func (x *DetailedPRStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_v1_github_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailedPRStatsResponse.ProtoReflect.Descriptor instead.
func (*DetailedPRStatsResponse) Descriptor() ([]byte, []int) {
	return file_github_v1_github_proto_rawDescGZIP(), []int{9}
}

func (x *DetailedPRStatsResponse) GetAvgMergeTime() string {
	if x != nil {
		return x.AvgMergeTime
	}
	return ""
}

func (x *DetailedPRStatsResponse) GetOpenPrs() int32 {
	if x != nil {
		return x.OpenPrs
	}
	return 0
}

func (x *DetailedPRStatsResponse) GetMergedLast_7() int32 {
	if x != nil {
		return x.MergedLast_7
	}
	return 0
}

func (x *DetailedPRStatsResponse) GetSmallPrs() int32 {
	if x != nil {
		return x.SmallPrs
	}
	return 0
}

func (x *DetailedPRStatsResponse) GetMediumPrs() int32 {
	if x != nil {
		return x.MediumPrs
	}
	return 0
}

func (x *DetailedPRStatsResponse) GetLargePrs() int32 {
	if x != nil {
		return x.LargePrs
	}
	return 0
}

func (x *DetailedPRStatsResponse) GetAvgComments() int32 {
	if x != nil {
		return x.AvgComments
	}
	return 0
}

func (x *DetailedPRStatsResponse) GetPrsWithoutReview() int32 {
	if x != nil {
		return x.PrsWithoutReview
	}
	return 0
}

var File_github_v1_github_proto protoreflect.FileDescriptor

const file_github_v1_github_proto_rawDesc = "" +
	"\n" +
	"\x16github/v1/github.proto\x12\rapi.github.v1\x1a\x1bgoogle/protobuf/empty.proto\"=\n" +
	"\x11RepositoryRequest\x12\x14\n" +
	"\x05owner\x18\x01 \x01(\tR\x05owner\x12\x12\n" +
	"\x04repo\x18\x02 \x01(\tR\x04repo\"(\n" +
	"\x0eHealthResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"x\n" +
	"\x11PRMetricsResponse\x12$\n" +
	"\x0eavg_merge_time\x18\x01 \x01(\tR\favgMergeTime\x12\x19\n" +
	"\bopen_prs\x18\x02 \x01(\x05R\aopenPrs\x12\"\n" +
	"\rmerged_last_7\x18\x03 \x01(\x05R\vmergedLast7\"s\n" +
	"\tMonthData\x12\x14\n" +
	"\x05month\x18\x01 \x01(\tR\x05month\x12\x19\n" +
	"\bopen_prs\x18\x02 \x01(\x05R\aopenPrs\x12\x1d\n" +
	"\n" +
	"merged_prs\x18\x03 \x01(\x05R\tmergedPrs\x12\x16\n" +
	"\x06issues\x18\x04 \x01(\x05R\x06issues\"D\n" +
	"\x14MonthlyStatsResponse\x12,\n" +
	"\x04data\x18\x01 \x03(\v2\x18.api.github.v1.MonthDataR\x04data\"\xb3\x01\n" +
	"\x11RepoStatsResponse\x12\x14\n" +
	"\x05stars\x18\x01 \x01(\x05R\x05stars\x12\x14\n" +
	"\x05forks\x18\x02 \x01(\x05R\x05forks\x12\x1a\n" +
	"\bwatchers\x18\x03 \x01(\x05R\bwatchers\x12\x17\n" +
	"\asize_kb\x18\x04 \x01(\x05R\x06sizeKb\x12!\n" +
	"\flast_updated\x18\x05 \x01(\tR\vlastUpdated\x12\x1a\n" +
	"\blanguage\x18\x06 \x01(\tR\blanguage\"r\n" +
	"\x0fContributorData\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12$\n" +
	"\rcontributions\x18\x02 \x01(\x05R\rcontributions\x12\x1d\n" +
	"\n" +
	"avatar_url\x18\x03 \x01(\tR\tavatarUrl\"\xf4\x01\n" +
	"\x18ContributorStatsResponse\x12-\n" +
	"\x12total_contributors\x18\x01 \x01(\x05R\x11totalContributors\x12I\n" +
	"\x10top_contributors\x18\x02 \x03(\v2\x1e.api.github.v1.ContributorDataR\x0ftopContributors\x12/\n" +
	"\x14commits_last_30_days\x18\x03 \x01(\x05R\x11commitsLast30Days\x12-\n" +
	"\x13avg_commits_per_day\x18\x04 \x01(\x02R\x10avgCommitsPerDay\"\xe5\x01\n" +
	"\x12IssueStatsResponse\x12\x1f\n" +
	"\vopen_issues\x18\x01 \x01(\x05R\n" +
	"openIssues\x12#\n" +
	"\rclosed_issues\x18\x02 \x01(\x05R\fclosedIssues\x12.\n" +
	"\x13avg_resolution_time\x18\x03 \x01(\tR\x11avgResolutionTime\x12*\n" +
	"\x11oldest_open_issue\x18\x04 \x01(\tR\x0foldestOpenIssue\x12-\n" +
	"\x13issues_last_30_days\x18\x05 \x01(\x05R\x10issuesLast30Days\"\xa8\x02\n" +
	"\x17DetailedPRStatsResponse\x12$\n" +
	"\x0eavg_merge_time\x18\x01 \x01(\tR\favgMergeTime\x12\x19\n" +
	"\bopen_prs\x18\x02 \x01(\x05R\aopenPrs\x12\"\n" +
	"\rmerged_last_7\x18\x03 \x01(\x05R\vmergedLast7\x12\x1b\n" +
	"\tsmall_prs\x18\x04 \x01(\x05R\bsmallPrs\x12\x1d\n" +
	"\n" +
	"medium_prs\x18\x05 \x01(\x05R\tmediumPrs\x12\x1b\n" +
	"\tlarge_prs\x18\x06 \x01(\x05R\blargePrs\x12!\n" +
	"\favg_comments\x18\a \x01(\x05R\vavgComments\x12,\n" +
	"\x12prs_without_review\x18\b \x01(\x05R\x10prsWithoutReview2\xf4\x04\n" +
	"\x06Github\x12D\n" +
	"\tGetHealth\x12\x16.google.protobuf.Empty\x1a\x1d.api.github.v1.HealthResponse\"\x00\x12T\n" +
	"\fGetPRMetrics\x12 .api.github.v1.RepositoryRequest\x1a .api.github.v1.PRMetricsResponse\"\x00\x12Z\n" +
	"\x0fGetMonthlyStats\x12 .api.github.v1.RepositoryRequest\x1a#.api.github.v1.MonthlyStatsResponse\"\x00\x12T\n" +
	"\fGetRepoStats\x12 .api.github.v1.RepositoryRequest\x1a .api.github.v1.RepoStatsResponse\"\x00\x12b\n" +
	"\x13GetContributorStats\x12 .api.github.v1.RepositoryRequest\x1a'.api.github.v1.ContributorStatsResponse\"\x00\x12V\n" +
	"\rGetIssueStats\x12 .api.github.v1.RepositoryRequest\x1a!.api.github.v1.IssueStatsResponse\"\x00\x12`\n" +
	"\x12GetDetailedPRStats\x12 .api.github.v1.RepositoryRequest\x1a&.api.github.v1.DetailedPRStatsResponse\"\x00B,Z*github-insights-dashboard/api/github/v1;v1b\x06proto3"

var (
	file_github_v1_github_proto_rawDescOnce sync.Once
	file_github_v1_github_proto_rawDescData []byte
)

func file_github_v1_github_proto_rawDescGZIP() []byte {
	file_github_v1_github_proto_rawDescOnce.Do(func() {
		file_github_v1_github_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_v1_github_proto_rawDesc), len(file_github_v1_github_proto_rawDesc)))
	})
	return file_github_v1_github_proto_rawDescData
}

var file_github_v1_github_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_github_v1_github_proto_goTypes = []any{
	(*RepositoryRequest)(nil),        // 0: api.github.v1.RepositoryRequest
	(*HealthResponse)(nil),           // 1: api.github.v1.HealthResponse
	(*PRMetricsResponse)(nil),        // 2: api.github.v1.PRMetricsResponse
	(*MonthData)(nil),                // 3: api.github.v1.MonthData
	(*MonthlyStatsResponse)(nil),     // 4: api.github.v1.MonthlyStatsResponse
	(*RepoStatsResponse)(nil),        // 5: api.github.v1.RepoStatsResponse
	(*ContributorData)(nil),          // 6: api.github.v1.ContributorData
	(*ContributorStatsResponse)(nil), // 7: api.github.v1.ContributorStatsResponse
	(*IssueStatsResponse)(nil),       // 8: api.github.v1.IssueStatsResponse
	(*DetailedPRStatsResponse)(nil),  // 9: api.github.v1.DetailedPRStatsResponse
	(*emptypb.Empty)(nil),            // 10: google.protobuf.Empty
}
var file_github_v1_github_proto_depIdxs = []int32{
	3,  // 0: api.github.v1.MonthlyStatsResponse.data:type_name -> api.github.v1.MonthData
	6,  // 1: api.github.v1.ContributorStatsResponse.top_contributors:type_name -> api.github.v1.ContributorData
	10, // 2: api.github.v1.Github.GetHealth:input_type -> google.protobuf.Empty
	0,  // 3: api.github.v1.Github.GetPRMetrics:input_type -> api.github.v1.RepositoryRequest
	0,  // 4: api.github.v1.Github.GetMonthlyStats:input_type -> api.github.v1.RepositoryRequest
	0,  // 5: api.github.v1.Github.GetRepoStats:input_type -> api.github.v1.RepositoryRequest
	0,  // 6: api.github.v1.Github.GetContributorStats:input_type -> api.github.v1.RepositoryRequest
	0,  // 7: api.github.v1.Github.GetIssueStats:input_type -> api.github.v1.RepositoryRequest
	0,  // 8: api.github.v1.Github.GetDetailedPRStats:input_type -> api.github.v1.RepositoryRequest
	1,  // 9: api.github.v1.Github.GetHealth:output_type -> api.github.v1.HealthResponse
	2,  // 10: api.github.v1.Github.GetPRMetrics:output_type -> api.github.v1.PRMetricsResponse
	4,  // 11: api.github.v1.Github.GetMonthlyStats:output_type -> api.github.v1.MonthlyStatsResponse
	5,  // 12: api.github.v1.Github.GetRepoStats:output_type -> api.github.v1.RepoStatsResponse
	7,  // 13: api.github.v1.Github.GetContributorStats:output_type -> api.github.v1.ContributorStatsResponse
	8,  // 14: api.github.v1.Github.GetIssueStats:output_type -> api.github.v1.IssueStatsResponse
	9,  // 15: api.github.v1.Github.GetDetailedPRStats:output_type -> api.github.v1.DetailedPRStatsResponse
	9,  // [9:16] is the sub-list for method output_type
	2,  // [2:9] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_github_v1_github_proto_init() }
func file_github_v1_github_proto_init() {
	if File_github_v1_github_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_v1_github_proto_rawDesc), len(file_github_v1_github_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_v1_github_proto_goTypes,
		DependencyIndexes: file_github_v1_github_proto_depIdxs,
		MessageInfos:      file_github_v1_github_proto_msgTypes,
	}.Build()
	File_github_v1_github_proto = out.File
	file_github_v1_github_proto_goTypes = nil
	file_github_v1_github_proto_depIdxs = nil
}
