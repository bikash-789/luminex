syntax = "proto3";

package api.github.v1;

import "google/protobuf/empty.proto";

option go_package = "github-insights-dashboard/api/github/v1;v1";


service Github {
  
  rpc GetHealth(google.protobuf.Empty) returns (HealthResponse) {}
  
  
  rpc GetPRMetrics(RepositoryRequest) returns (PRMetricsResponse) {}
  
  
  rpc GetMonthlyStats(RepositoryRequest) returns (MonthlyStatsResponse) {}
  
  
  rpc GetRepoStats(RepositoryRequest) returns (RepoStatsResponse) {}
  
  
  rpc GetContributorStats(RepositoryRequest) returns (ContributorStatsResponse) {}
  
  
  rpc GetIssueStats(RepositoryRequest) returns (IssueStatsResponse) {}
  
  
  rpc GetDetailedPRStats(RepositoryRequest) returns (DetailedPRStatsResponse) {}
}


message RepositoryRequest {
  string owner = 1;
  string repo = 2;
}


message HealthResponse {
  string status = 1;
}


message PRMetricsResponse {
  string avg_merge_time = 1;
  int32 open_prs = 2;
  int32 merged_last_7 = 3;
}


message MonthData {
  string month = 1;
  int32 open_prs = 2;
  int32 merged_prs = 3;
  int32 issues = 4;
}


message MonthlyStatsResponse {
  repeated MonthData data = 1;
}


message RepoStatsResponse {
  int32 stars = 1;
  int32 forks = 2;
  int32 watchers = 3;
  int32 size_kb = 4;
  string last_updated = 5;
  string language = 6;
}


message ContributorData {
  string username = 1;
  int32 contributions = 2;
  string avatar_url = 3;
}


message ContributorStatsResponse {
  int32 total_contributors = 1;
  repeated ContributorData top_contributors = 2;
  int32 commits_last_30_days = 3;
  float avg_commits_per_day = 4;
}


message IssueStatsResponse {
  int32 open_issues = 1;
  int32 closed_issues = 2;
  string avg_resolution_time = 3;
  string oldest_open_issue = 4;
  int32 issues_last_30_days = 5;
}


message DetailedPRStatsResponse {
  string avg_merge_time = 1;
  int32 open_prs = 2;
  int32 merged_last_7 = 3;
  int32 small_prs = 4;
  int32 medium_prs = 5;
  int32 large_prs = 6;
  int32 avg_comments = 7;
  int32 prs_without_review = 8;
} 